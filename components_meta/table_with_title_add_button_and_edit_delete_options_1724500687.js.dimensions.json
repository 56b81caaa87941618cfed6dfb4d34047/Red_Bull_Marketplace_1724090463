{
    "id": "table_with_title_add_button_and_edit_delete_options_1724500687",
    "name": "table-with-title-add-button-and-edit-delete-options",
    "type": "containerComponent",
    "metadata": {
        "markdownText": "<!--\n To add this component to the user's app, you must follow all three of these steps:\n 1. In their html file, include `<table-with-title-add-button-and-edit-delete-options></table-with-title-add-button-and-edit-delete-options>`. Keep blank lines before and after this code. Do not remove the other components!\n 2. In their html file, import the JS file for this component `./components/table-with-title-add-button-and-edit-delete-options.js` in the `HEAD` section. Keep blank lines before and after this code. Do not remove the other component imports!\n 3. You are given the correct SQL statement -- replace the `PLACEHOLDER_SQL_STATEMENT` variable in this file with the actual SQL statement.\n-->\n\n<template>\n  <div class=\"max-w-screen-xl mx-auto px-4 md:px-8 bg-magenta-500 bg-opacity-20 rounded-lg backdrop-filter backdrop-blur-lg shadow-lg p-6\">\n    <div class=\"items-start justify-between md:flex\">\n      <div class=\"max-w-lg\">\n        <h3 class=\"text-pink-200 text-xl font-bold sm:text-2xl\">\n          TABLE_TITLE_PLACEHOLDER_TEXT\n        </h3>\n      </div>\n      <div class=\"mt-4 md:mt-0\">\n        <button class=\"px-4 py-2 text-pink-200 bg-magenta-600 bg-opacity-50 rounded-lg hover:bg-magenta-500 hover:bg-opacity-70 transition-colors duration-300 backdrop-filter backdrop-blur-sm shadow-lg\">\n          Hadoken\n        </button>\n      </div>\n    </div>\n    <div class=\"mt-8 bg-pink-400 bg-opacity-20 rounded-lg p-6 shadow-lg backdrop-filter backdrop-blur-md\">\n      <h4 class=\"text-xl font-semibold text-pink-200 mb-4\">Email Santa</h4>\n      <form @submit.prevent=\"sendEmailToSanta\" class=\"space-y-4\">\n        <div>\n          <label for=\"name\" class=\"block text-pink-100 mb-2\">Your Name:</label>\n          <input type=\"text\" id=\"name\" v-model=\"santaEmail.name\" required class=\"w-full px-4 py-2 rounded-lg bg-magenta-500 bg-opacity-20 text-pink-100 focus:outline-none focus:ring-2 focus:ring-pink-300 placeholder-pink-300\">\n        </div>\n        <div>\n          <label for=\"email\" class=\"block text-pink-100 mb-2\">Your Email:</label>\n          <input type=\"email\" id=\"email\" v-model=\"santaEmail.email\" required class=\"w-full px-4 py-2 rounded-lg bg-magenta-500 bg-opacity-20 text-pink-100 focus:outline-none focus:ring-2 focus:ring-pink-300 placeholder-pink-300\">\n        </div>\n        <div>\n          <label for=\"message\" class=\"block text-pink-100 mb-2\">Message to Santa:</label>\n          <textarea id=\"message\" v-model=\"santaEmail.message\" required rows=\"4\" class=\"w-full px-4 py-2 rounded-lg bg-magenta-500 bg-opacity-20 text-pink-100 focus:outline-none focus:ring-2 focus:ring-pink-300 placeholder-pink-300\"></textarea>\n        </div>\n        <button type=\"submit\" class=\"px-6 py-2 bg-pink-500 bg-opacity-70 text-white rounded-lg hover:bg-pink-400 hover:bg-opacity-80 transition-colors duration-300 shadow-lg backdrop-filter backdrop-blur-sm\">Send to Santa</button>\n      </form>\n    </div>\n    <div class=\"items-start justify-between md:flex mt-12 shadow-lg rounded-lg overflow-x-auto bg-magenta-400 bg-opacity-10 backdrop-filter backdrop-blur-md\">\n    </div>\n    <div v-if=\"tableHeaders.length === 0\" class=\"text-pink-100\">\n      Executing a SQL query to populate data into this table...\n    </div>\n    <div class=\"items-start justify-between md:flex mt-12 shadow-lg rounded-lg overflow-x-auto bg-magenta-400 bg-opacity-10 backdrop-filter backdrop-blur-md\">\n      <table class=\"w-full table-auto text-sm text-left\">\n        <thead class=\"bg-magenta-500 bg-opacity-30 text-pink-100 font-medium border-b border-pink-300\">\n          <tr>\n            <th v-for=\"header in tableHeaders\" :key=\"header\" class=\"py-3 px-6 hover:bg-magenta-400 hover:bg-opacity-40 transition-colors duration-300\" v-html=\"header\"></th>\n          </tr>\n        </thead>\n        <tbody class=\"text-pink-200 divide-y divide-pink-300\">\n          <tr v-for=\"(item, idx) in tableItems\" :key=\"idx\" class=\"hover:bg-magenta-400 hover:bg-opacity-20 transition-colors duration-300\">\n            <td\n              v-for=\"(value, key) in item\"\n              :key=\"key\"\n              v-if=\"tableHeaders.includes(key)\"\n              class=\"py-3 px-6 whitespace-nowrap\"\n            >\n              <span v-html=\"value\"></span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"TableWithTitleAddButtonAndEditDeleteOptions\",\n  data() {\n    return {\n      tableItems: [],\n      tableHeaders: [],\n      SQL_statement: \"PLACEHOLDER_SQL_STATEMENT\",\n      santaEmail: {\n        name: '',\n        email: '',\n        message: ''\n      }\n    };\n  },\n  methods: {\n    fetch_data_from_database(SQL_statement) {\n      return axios.post(\"https://nl2sql-prod.azurewebsites.net/execute_sql\", { query: SQL_statement })\n        .then(response => {\n          const tableItems = response.data.result;\n          if (tableItems.length > 0) {\n            const tableHeaders = Object.keys(tableItems[0]);\n            this.tableItems = tableItems;\n            this.tableHeaders = tableHeaders;\n            return [tableHeaders, tableItems];\n          }\n        });\n    },\n    sendEmailToSanta() {\n      // Here you would typically send the email using an API\n      console.log('Sending email to Santa:', this.santaEmail);\n      // Reset the form after sending\n      this.santaEmail = {\n        name: '',\n        email: '',\n        message: ''\n      };\n      alert('Your message has been sent to Santa!');\n    }\n  },\n  mounted() {\n    this.fetch_data_from_database(this.SQL_statement).then(([tableHeaders, tableItems]) => {\n      this.tableHeaders = tableHeaders;\n      this.tableItems = tableItems;\n    });\n  },\n};\n</script>"
    },
    "w": 4,
    "h": 17,
    "x": 0,
    "y": 0,
    "i": "11",
    "minW": 3,
    "maxW": 12,
    "minH": 1,
    "moved": false,
    "static": false,
    "isDraggable": true,
    "isResizable": true
}